name: 'Update Docker Tags'
description: 'Updates Docker image tags for releases'

inputs:
  version:
    description: 'Version to tag (e.g. v1.0.0)'
    required: true
  prerelease:
    description: 'Whether this is a prerelease'
    required: true
  registry_token:  # Renamed for clarity
    description: 'Container registry access token'
    required: true
  registry_username:  # Renamed for clarity
    description: 'Container registry username'
    required: true

runs:
  using: "composite"
  steps:
    - name: Login to Container Registry
      shell: bash
      run: |
        echo "${{ inputs.registry_token }}" | \
        docker login -u "${{ inputs.registry_username }}" --password-stdin
        
        # Export for subsequent steps
        echo "DOCKER_TAG=${{ inputs.prerelease && 'beta' || 'latest' }}" >> $GITHUB_ENV
        echo "VERSION=${{ inputs.version }}" >> $GITHUB_ENV
        
    - name: Update Image Tags
      shell: bash
      run: |
        set -e # Exit on any error
        
        IMAGE_NAME="cmo640/dev-environment"
        
        echo "Tagging for version ${VERSION}"
        
        # Create release-specific version tag from existing image
        docker tag ${IMAGE_NAME}:${DOCKER_TAG} ${IMAGE_NAME}:${VERSION}
        docker push ${IMAGE_NAME}:${VERSION}
        
        # Update status in GH Actions log
        echo "âœ“ Tagged and pushed version: ${VERSION}"
