name: 'DockerHub Build'
description: 'Builds and pushes Docker image to DockerHub'

inputs:
  environment:
    description: 'Environment name (main, beta, develop, pipeline)'
    required: true
  base_image:
    description: "Base image to use for build"
    required: false
    type: string

outputs:
  artifact_name:
    description: "Name of the uploaded artifact"
    value: ${{ steps.upload.outputs.artifact_name }}
  image_changed:
    description: "Whether the image was changed"
    value: ${{ steps.check_changes.outputs.changed }}
  image_tag:
    description: "The tag of the built image"
    value: ${{ steps.build_info.outputs.image_tag }}

runs:
  using: "composite"
  steps:
    - name: Check for Dockerfile changes
      id: check_changes
      shell: bash
      run: |
        CHANGED=false
        if git diff --name-only HEAD^ HEAD | grep -q "distributions/dockerhub/Dockerfile\|startup/"; then
          CHANGED=true
        fi
        echo "changed=$CHANGED" >> $GITHUB_OUTPUT
    
    - name: Set up Docker Buildx
      if: steps.check_changes.outputs.changed == 'true'
      uses: docker/setup-buildx-action@v3
      with:
        buildkitd-flags: --debug

    - name: Copy startup scripts
      if: steps.check_changes.outputs.changed == 'true'
      shell: bash
      run: cp -r startup distributions/dockerhub/

    - name: Set build info
      id: build_info
      shell: bash
      run: |
        VERSION=$(date +%Y.%m.%d)
        SHA_SHORT=$(echo ${{ github.sha }} | cut -c1-7)
        ENV_TAG="${{ inputs.environment }}"
        
        TAGS="cmoe640/dev-environment:${ENV_TAG}"
        TAGS="${TAGS},cmoe640/dev-environment:${VERSION}-${ENV_TAG}"
        TAGS="${TAGS},cmoe640/dev-environment:${SHA_SHORT}"
        
        if [[ "${{ inputs.environment }}" == "production" ]]; then
          TAGS="${TAGS},cmoe640/dev-environment:latest,cmoe640/dev-environment:stable"
        fi
        
        echo "tags=${TAGS}" >> $GITHUB_OUTPUT
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "image_tag=cmoe640/dev-environment:${ENV_TAG}" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      if: steps.check_changes.outputs.changed == 'true'
      uses: docker/build-push-action@v5
      with:
        context: ./distributions/dockerhub
        file: ./distributions/dockerhub/Dockerfile
        push: true
        tags: ${{ steps.build_info.outputs.tags }}
        labels: |
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.created=${{ steps.build_info.outputs.date }}
