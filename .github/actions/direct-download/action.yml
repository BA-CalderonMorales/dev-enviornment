name: 'Direct Download Build'
description: 'Creates direct download package from Docker image'

inputs:
  image_changed:
    description: 'Whether the Docker image was changed'
    required: true
    type: string

outputs:
  artifact_name:
    description: "Name of the uploaded artifact"
    value: ${{ steps.upload.outputs.artifact_name }}
  build_changed:
    description: "Whether the build was changed"
    value: ${{ steps.check_changes.outputs.changed }}

runs:
  using: "composite"
  steps:
    - name: Check for build changes
      id: check_changes
      shell: bash
      run: |
        CHANGED=false
        if [[ "${{ inputs.image_changed }}" == "true" ]]; then
          CHANGED=true
        fi
        echo "changed=$CHANGED" >> $GITHUB_OUTPUT

    - name: Download Docker image artifacts
      if: steps.check_changes.outputs.changed == 'true'
      uses: actions/download-artifact@v4
      with:
        name: dockerhub-artifacts
        path: artifacts/dockerhub

    - name: Set up Docker
      if: steps.check_changes.outputs.changed == 'true'
      shell: bash
      run: |
        # Setup Docker installation
        sudo apt-get update
        sudo apt-get install -y ca-certificates curl gnupg lsb-release jq
        sudo mkdir -p /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io

    - name: Extract Docker image
      if: steps.check_changes.outputs.changed == 'true'
      shell: bash
      run: |
        IMAGE_TAG=$(jq -r '.image' artifacts/dockerhub/image-info.json)
        docker pull $IMAGE_TAG
        CONTAINER_ID=$(docker create $IMAGE_TAG)
        mkdir -p distributions/direct_download
        docker export $CONTAINER_ID > distributions/direct_download/dev-environment.tar
        docker rm $CONTAINER_ID

    - name: Generate checksum
      if: steps.check_changes.outputs.changed == 'true'
      shell: bash
      run: |
        cd distributions/direct_download
        sha256sum dev-environment.tar > checksum.txt

    - name: Create artifact summary
      shell: bash
      run: |
        if [[ "${{ steps.check_changes.outputs.changed }}" == "true" ]]; then
          echo "## 📦 Direct Download Package" >> $GITHUB_STEP_SUMMARY
          echo "- Package created: dev-environment.tar" >> $GITHUB_STEP_SUMMARY
          echo "- Checksum file: checksum.txt" >> $GITHUB_STEP_SUMMARY
          echo "- Size: $(du -h distributions/direct_download/dev-environment.tar | cut -f1)" >> $GITHUB_STEP_SUMMARY
        else
          echo "## 📝 No Changes Detected" >> $GITHUB_STEP_SUMMARY
          echo "Using existing package, no new build required." >> $GITHUB_STEP_SUMMARY
        fi
