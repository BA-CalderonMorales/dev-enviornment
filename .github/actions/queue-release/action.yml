name: 'Queue Release'
description: 'Adds a commit to the release queue'

inputs:
  github_token:
    required: true
  sha:
    required: true
  branch:
    required: true

outputs:
  queue_position:
    description: 'Position in queue'
    value: ${{ steps.queue.outputs.position }}
  estimated_time:
    description: 'Estimated time until release'
    value: ${{ steps.queue.outputs.estimated_time }}

runs:
  using: 'composite'
  steps:
    - id: queue
      shell: bash
      run: |
        # Determine queue file based on branch
        QUEUE_FILE=".github/release_queue/${{ inputs.branch }}.json"
        
        # Create queue directory if needed
        mkdir -p .github/release_queue
        
        # Create or read queue file
        if [ ! -f "$QUEUE_FILE" ]; then
          echo '{"items":[]}' > "$QUEUE_FILE"
        fi
        
        # Add new item to queue
        jq --arg sha "${{ inputs.sha }}" \
           --arg date "$(date -u +"%Y-%m-%dT%H:%M:%SZ")" \
           '.items += [{"commit": $sha, "date": $date}]' \
           "$QUEUE_FILE" > "${QUEUE_FILE}.tmp" && mv "${QUEUE_FILE}.tmp" "$QUEUE_FILE"
        
        # Calculate queue position and estimated time
        POSITION=$(jq '.items | length' "$QUEUE_FILE")
        
        if [[ "${{ inputs.branch }}" == "beta" ]]; then
          EST_DAYS=0
        else
          # For main branch, estimate based on 7-day waiting period
          EST_DAYS=7
        fi
        
        echo "position=$POSITION" >> $GITHUB_OUTPUT
        echo "estimated_time=$EST_DAYS days" >> $GITHUB_OUTPUT
        
        # Commit and push queue update
        git config user.name "GitHub Action"
        git config user.email "action@github.com"
        git add "$QUEUE_FILE"
        git commit -m "ðŸ“¦ Queue release for ${{ inputs.sha }}"
        git push
