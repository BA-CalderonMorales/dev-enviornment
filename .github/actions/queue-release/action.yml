name: 'Queue Release'
description: 'Adds a commit to the release queue via PR'

inputs:
  github_token:
    required: true
  sha:
    required: true
  branch:
    required: true

outputs:
  queue_position:
    description: 'Position in queue'
    value: ${{ steps.process_queue.outputs.position }}
  estimated_time:
    description: 'Estimated time until release'
    value: ${{ steps.process_queue.outputs.estimated_time }}
  pr_number:
    description: 'Created PR number'
    value: ${{ steps.create_pr.outputs.pr_number }}

runs:
  using: 'composite'
  steps:
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Verify Scripts Directory
      shell: bash
      run: |
        SCRIPTS_DIR="${{ github.workspace }}/.github/scripts"
        if [ ! -d "$SCRIPTS_DIR" ]; then
          echo "‚ùå Scripts directory not found at: $SCRIPTS_DIR"
          exit 1
        fi
        echo "üìÅ Found scripts directory at: $SCRIPTS_DIR"
        ls -la "$SCRIPTS_DIR"

    - name: Debug Inputs
      shell: bash
      working-directory: .github/scripts
      run: |
        cargo run --bin step-debug-inputs
      env:
        INPUT_SHA: ${{ inputs.sha }}
        INPUT_BRANCH: ${{ inputs.branch }}
        GITHUB_REF: ${{ github.ref }}
        GITHUB_SHA: ${{ github.sha }}
        RUST_LOG: info

    - id: setup_queue
      shell: bash
      working-directory: .github/scripts
      run: cargo run --bin step_setup_queue
      env:
        RUST_LOG: info

    - id: process_queue
      shell: bash
      working-directory: .github/scripts
      run: cargo run --bin step_process_queue
      env:
        INPUT_SHA: ${{ inputs.sha }}
        INPUT_BRANCH: ${{ inputs.branch }}
        RUST_LOG: info

    - name: Run Automated Tests
      shell: bash
      working-directory: .github/scripts
      run: |e
        # Add your automated tests here
        # For example: cargo test
        echo "Running automated tests..."

    - name: Create PR
      shell: bash
      working-directory: .github/scripts
      run: cargo run --bin step_create_pr  # Corrected binary name
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        QUEUE_BRANCH: ${{ steps.setup_queue.outputs.branch }}
        INPUT_BRANCH: ${{ inputs.branch }}
        INPUT_SHA: ${{ inputs.sha }}
        QUEUE_POSITION: ${{ steps.process_queue.outputs.position }}
        QUEUE_REMAINING: ${{ steps.process_queue.outputs.remaining }}
        QUEUE_ESTIMATED_TIME: ${{ steps.process_queue.outputs.estimated_time }}
        RUST_LOG: info
