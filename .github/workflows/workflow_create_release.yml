name: Create Release

on:
  # Manual trigger with branch protection
  workflow_dispatch:
    inputs:
      trigger_sha:
        description: 'SHA to release (optional)'
        required: false
        type: string
      source_branch:
        description: 'Branch (must be beta or main)'
        required: false
        type: string
        default: 'beta'
      force_process:
        description: 'Force queue processing'
        required: false
        type: boolean
        default: false
  # Weekly scheduled release processing - only on beta/main
  schedule:
    # Run every Saturday at 10:00 AM CST (16:00 UTC)
    - cron: '0 16 * * SAT'

# Add concurrency to prevent multiple releases running simultaneously
concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: write
  pull-requests: write
  issues: write

env:
  MAINTAINER_GITHUB: '@BA-CalderonMorales'
  INITIAL_VERSION: 'v0.0.1'
  DOCKER_IMAGE: 'cmo640/dev-environment'

jobs:
  #####################################################################
  # Branch Protection Check
  # ---------------------
  # Purpose: Ensures releases only run on beta/main branches
  #
  # Flow:
  # 1. Validates branch name
  # 2. Blocks unauthorized release attempts
  # 3. Sets release type for downstream jobs
  #####################################################################
  branch_check:
    runs-on: ubuntu-22.04
    outputs:
      branch: ${{ steps.action.outputs.branch }}
      allowed: ${{ steps.action.outputs.allowed }}
    steps:
      - uses: actions/checkout@v4
      - id: action
        uses: ./.github/actions/branch-check
        with:
          source_branch: ${{ github.event.inputs.source_branch }}
          github_ref: ${{ github.ref }}

  #####################################################################
  # Process Release Queue
  # -------------------
  # Purpose: Processes the release queue and prepares for release creation
  #
  # Flow:
  # 1. Gets next item from queue
  # 2. Verifies all prerequisites
  # 3. Sets up release parameters
  #####################################################################
  process_queue:
    needs: branch_check
    if: |
      github.event_name == 'workflow_dispatch' || 
      github.event_name == 'schedule' && 
      needs.branch_check.outputs.allowed == 'true'
    runs-on: ubuntu-22.04
    outputs:
      sha: ${{ steps.action.outputs.sha }}
      branch: ${{ steps.action.outputs.branch }}
      can_proceed: ${{ steps.action.outputs.can_proceed }}
      version: ${{ steps.action.outputs.version }}
      prerelease: ${{ steps.action.outputs.prerelease }}
    steps:
      - uses: actions/checkout@v4
      - id: action
        uses: ./.github/actions/process-release-queue-job
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          trigger_sha: ${{ inputs.trigger_sha }}
          source_branch: ${{ inputs.source_branch }}
          force_process: ${{ inputs.force_process }}
          is_scheduled: ${{ github.event_name == 'schedule' }}
          initial_version: ${{ env.INITIAL_VERSION }}

  #####################################################################
  # Create Release
  # -------------
  # Purpose: Creates the actual release if queue processing succeeded
  #
  # Flow:
  # 1. Creates GitHub release
  # 2. Updates Docker tags
  # 3. Updates documentation
  #####################################################################
  create_release:
    needs: [branch_check, process_queue]
    if: |
      github.event_name == 'workflow_dispatch' && needs.process_queue.outputs.can_proceed == 'true' ||
      needs.branch_check.outputs.allowed == 'true' &&
      needs.process_queue.outputs.can_proceed == 'true'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
          clean: false

      - name: Create Release
        uses: ./.github/actions/create-release
        with:
          version: ${{ needs.process_queue.outputs.version }}
          prerelease: ${{ needs.process_queue.outputs.prerelease }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          bot_gpg_private_key: ${{ secrets.BOT_GPG_PRIVATE_KEY }}
          bot_gpg_passphrase: ${{ secrets.BOT_GPG_PASSPHRASE }}
          bot_github_token: ${{ secrets.BOT_GITHUB_TOKEN }}
          bot_email: ${{ secrets.BOT_EMAIL }}
          bot_name: ${{ secrets.BOT_NAME }}
          bot_domain: ${{ secrets.BOT_DOMAIN }}

  #####################################################################
  # Handle Failure
  # -------------
  # Purpose: Handles any failures in the release process
  #####################################################################
  handle_failure:
    needs: [branch_check, process_queue, create_release]
    if: |
      always() &&
      (needs.branch_check.outputs.allowed == 'true' && failure())
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/handle-release-failure
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          maintainer: ${{ env.MAINTAINER_GITHUB }}
          sha: ${{ needs.process_queue.outputs.sha }}
          branch: ${{ needs.process_queue.outputs.branch }}

  #####################################################################
  # Notify Queue
  # -------------
  # Purpose: Notifies the status of the release queue
  #####################################################################
  notify_queue:
    needs: [process_queue, create_release]
    if: always()
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/notify-queue
        with:
          can_proceed: ${{ needs.process_queue.outputs.can_proceed }}
          commit_sha: ${{ needs.process_queue.outputs.sha }}
          release_result: ${{ needs.create_release.result }}
          github_token: ${{ secrets.GITHUB_TOKEN }}