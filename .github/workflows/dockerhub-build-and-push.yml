name: DockerHub Build and Push

# Trigger conditions
on:
  push:
    # Only run when specific paths are modified
    paths:
      - 'distributions/dockerhub/**'  # Changes to DockerHub distribution
      - 'startup/**'                  # Changes to startup scripts
      - '.github/workflows/**'        # Changes to workflows
      - 'docs/**'                    # Changes to documentation
    branches: [ main, develop ]       # Only on main branches
  pull_request:
    paths:
      - 'distributions/dockerhub/**'
      - 'startup/**'
      - '.github/workflows/**'
      - 'docs/**'
    branches: [ main, develop ]
  # Manual trigger option for testing
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - uses: actions/checkout@v4

      # Setup Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Authenticate with DockerHub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Copy startup scripts into build context
      # This is necessary because Docker COPY can't access parent directories
      - name: Copy startup scripts to build context
        run: |
          cp -r startup distributions/dockerhub/

      # Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./distributions/dockerhub      # Build context directory
          file: ./distributions/dockerhub/Dockerfile
          push: true                             # Push to registry after build
          tags: |                                # Image tags
            cmoe640/dev-environment:latest       # Latest version
            cmoe640/dev-environment:${{ github.sha }}  # Version tied to commit
          build-args: |                          # Build-time variables
            NODE_VERSION=22.3.0
            GO_VERSION=1.22.4
            RUST_VERSION=1.75.0

      # After successful build and push
      - name: Prepare Artifacts
        run: |
          mkdir -p artifacts/dockerhub
          echo "{
            \"version\": \"${{ github.sha }}\",
            \"image\": \"cmoe640/dev-environment:${{ github.sha }}\",
            \"date\": \"$(date -u +"%Y-%m-%d %H:%M UTC")\"
          }" > artifacts/dockerhub/image-info.json

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dockerhub-artifacts
          path: artifacts/dockerhub/
          retention-days: 1
