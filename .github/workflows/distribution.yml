name: Distribution Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    paths:
      - 'distributions/dockerhub/**'
      - 'distributions/bittorrent/**'
      - 'startup/**'
      - '.github/workflows/**'
      - 'docs/**'
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  actions: write

jobs:
  dockerhub:
    runs-on: ubuntu-latest
    outputs:
      artifact_name: ${{ steps.upload.outputs.artifact_name }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Copy startup scripts
        run: cp -r startup distributions/dockerhub/
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./distributions/dockerhub
          file: ./distributions/dockerhub/Dockerfile
          push: true
          tags: |
            cmoe640/dev-environment:latest
            cmoe640/dev-environment:${{ github.sha }}
      
      - name: Prepare Artifacts
        run: |
          mkdir -p artifacts/dockerhub
          echo '{
            "version": "${{ github.sha }}",
            "image": "cmoe640/dev-environment:${{ github.sha }}",
            "date": "'$(date -u +"%Y-%m-%d %H:%M UTC")'"
          }' > artifacts/dockerhub/image-info.json
      
      - id: upload
        uses: actions/upload-artifact@v4
        with:
          name: dockerhub-artifacts
          path: artifacts/dockerhub/
          retention-days: 1

  bittorrent:
    runs-on: ubuntu-latest
    outputs:
      artifact_name: ${{ steps.upload.outputs.artifact_name }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y transmission-cli
      
      - name: Copy startup scripts
        run: cp -r startup distributions/bittorrent/
      
      - name: Build Docker image
        run: |
          cd distributions/bittorrent
          docker build -t dev-environment:latest .
      
      - name: Create and seed torrent
        run: |
          cd distributions/bittorrent
          docker save dev-environment:latest > dev-environment.tar
          chmod +x scripts/torrent/create-torrent.sh
          chmod +x scripts/torrent/generate-magnet.sh
          ./scripts/torrent/create-torrent.sh
          ./scripts/torrent/generate-magnet.sh
      
      - name: Generate checksum
        run: |
          cd distributions/bittorrent
          sha256sum dev-environment.tar > checksum.txt
      
      - id: upload
        uses: actions/upload-artifact@v4
        with:
          name: bittorrent-artifacts
          path: |
            distributions/bittorrent/dev-environment.tar
            distributions/bittorrent/dev-environment.torrent
            distributions/bittorrent/checksum.txt
            distributions/bittorrent/magnet.txt

  e2e-tests:
    needs: [dockerhub, bittorrent]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: "*-artifacts"
          path: artifacts
          
      - name: Run Creator Tests
        run: |
          cd e2e
          cargo run --release -- creator \
            --dockerfile "../distributions/dockerhub/Dockerfile" \
            --dockerhub-repo "cmoe640/dev-environment"
            
      - name: Run User Tests
        run: |
          cd e2e
          cargo run --release -- user \
            --dockerhub-image "cmoe640/dev-environment:${{ github.sha }}" \
            --torrent-file "../artifacts/bittorrent/dev-environment.torrent" \
            --checksum-file "../artifacts/bittorrent/checksum.txt"

  create-release:
    needs: e2e-tests
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts
      
      - name: Generate release notes
        run: |
          echo "# Development Environment Release" > release-notes.md
          echo "## Distribution Methods" >> release-notes.md
          
          # Add DockerHub info
          if [ -f "release-artifacts/dockerhub-artifacts/image-info.json" ]; then
            echo "### DockerHub" >> release-notes.md
            echo "\`\`\`" >> release-notes.md
            cat release-artifacts/dockerhub-artifacts/image-info.json >> release-notes.md
            echo "\`\`\`" >> release-notes.md
          fi
          
          # Add BitTorrent info
          if [ -f "release-artifacts/bittorrent-artifacts/magnet.txt" ]; then
            echo "### BitTorrent" >> release-notes.md
            echo "Magnet Link:" >> release-notes.md
            echo "\`\`\`" >> release-notes.md
            cat release-artifacts/bittorrent-artifacts/magnet.txt >> release-notes.md
            echo "\`\`\`" >> release-notes.md
          fi
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release-artifacts/bittorrent-artifacts/dev-environment.torrent
            release-artifacts/bittorrent-artifacts/checksum.txt
            release-artifacts/bittorrent-artifacts/magnet.txt
          body_path: release-notes.md
          tag_name: v${{ github.sha }}
          draft: false
          prerelease: ${{ github.ref == 'refs/heads/develop' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 