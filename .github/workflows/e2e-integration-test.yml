name: E2E Integration Tests

# This workflow runs integration tests for all distribution methods.
# It triggers only after ALL distribution workflows have completed successfully.
#
# To add a new distribution method:
# 1. Add your distribution workflow name to the 'workflows' list below
# 2. Add a new test step in the 'Distribution Tests' section
# 3. Update the test results reporting to include your new distribution

on:
  workflow_run:
    workflows: ['DockerHub Build and Push', 'BitTorrent Build and Seed']
    types: [completed]
    branches: [main, develop]

jobs:
  wait-for-workflows:
    runs-on: ubuntu-latest
    # Only run if the triggering workflow succeeded
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      should_run: ${{ steps.check-workflows.outputs.should_run }}
    steps:
      - id: check-workflows
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const branch = context.payload.workflow_run.head_branch;
            
            // Get the latest runs of both workflows
            const dockerhubRun = await github.rest.actions.listWorkflowRuns({
              owner,
              repo,
              workflow_id: 'dockerhub-build-and-push.yml',
              branch,
              per_page: 1
            });
            
            const bittorrentRun = await github.rest.actions.listWorkflowRuns({
              owner,
              repo,
              workflow_id: 'bittorrent-build-and-seed.yml',
              branch,
              per_page: 1
            });
            
            // Check if both workflows have completed successfully
            const shouldRun = 
              dockerhubRun.data.workflow_runs[0]?.conclusion === 'success' &&
              bittorrentRun.data.workflow_runs[0]?.conclusion === 'success';
            
            core.setOutput('should_run', shouldRun);

  e2e-tests:
    needs: wait-for-workflows
    if: needs.wait-for-workflows.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      # Install dependencies
      # Add new tool installations here if needed for new distribution methods
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y transmission-cli

      # Distribution Tests
      # Add new distribution test steps here
      - name: Test DockerHub Distribution
        id: dockerhub
        run: |
          chmod +x distributions/dockerhub/e2e/scripts/test.sh
          ./distributions/dockerhub/e2e/scripts/test.sh

      - name: Test BitTorrent Distribution
        id: bittorrent
        run: |
          chmod +x distributions/bittorrent/e2e/scripts/test.sh
          export PREFER_BITTORRENT=true
          ./distributions/bittorrent/e2e/scripts/test.sh

      # Cross-distribution Tests
      - name: Test Distribution Switching
        id: switching
        run: |
          chmod +x startup/e2e/scripts/test-distribution-switch.sh
          ./startup/e2e/scripts/test-distribution-switch.sh

      # Results Reporting
      # Add new distribution results to the summary when adding new methods
      - name: Report Test Results
        if: always()
        run: |
          mkdir -p artifacts/tests
          {
            echo "ðŸ“Š E2E Test Summary"
            echo "=================="
            echo "Distribution Tests:"
            echo "- DockerHub: ${{ steps.dockerhub.outcome }}"
            echo "- BitTorrent: ${{ steps.bittorrent.outcome }}"
            echo ""
            echo "Cross-distribution Tests:"
            echo "- Distribution Switching: ${{ steps.switching.outcome }}"
          } > artifacts/tests/summary.txt

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: artifacts/tests/
          retention-days: 1 