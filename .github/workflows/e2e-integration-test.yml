name: E2E Integration Tests

# This workflow runs integration tests for all distribution methods.
# It triggers only after ALL distribution workflows have completed successfully.
#
# To add a new distribution method:
# 1. Add your distribution workflow name to the 'workflows' list below
# 2. Add a new test step in the 'Distribution Tests' section
# 3. Update the test results reporting to include your new distribution

on:
  workflow_run:
    workflows: ['DockerHub Build and Push', 'BitTorrent Build and Seed']
    types:
      - completed
    branches: [ main, develop ]

jobs:
  wait-for-workflows:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check-workflows.outputs.should_run }}
      workflow_status: ${{ steps.check-workflows.outputs.workflow_status }}
    steps:
      - id: check-workflows
        name: Check All Distribution Workflows
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const branch = context.payload.workflow_run.head_branch;
            
            console.log('Checking workflow statuses...');
            
            const dockerhubRun = await github.rest.actions.listWorkflowRuns({
              owner,
              repo,
              workflow_id: 'dockerhub-build-and-push.yml',
              branch,
              per_page: 1
            });
            
            const bittorrentRun = await github.rest.actions.listWorkflowRuns({
              owner,
              repo,
              workflow_id: 'bittorrent-build-and-seed.yml',
              branch,
              per_page: 1
            });
            
            const dockerStatus = dockerhubRun.data.workflow_runs[0]?.conclusion;
            const bittorrentStatus = bittorrentRun.data.workflow_runs[0]?.conclusion;
            
            console.log(`DockerHub Status: ${dockerStatus}`);
            console.log(`BitTorrent Status: ${bittorrentStatus}`);
            
            const shouldRun = dockerStatus === 'success' && bittorrentStatus === 'success';
            
            if (!shouldRun) {
              console.log('‚ö†Ô∏è Not all distribution workflows succeeded. E2E tests will be marked as skipped.');
              core.setOutput('workflow_status', 'skipped');
            } else {
              core.setOutput('workflow_status', 'ready');
            }
            
            core.setOutput('should_run', shouldRun);

  e2e-tests:
    needs: wait-for-workflows
    if: needs.wait-for-workflows.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    outputs:
      test_status: ${{ steps.set-status.outputs.status }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Download Distribution Artifacts
        id: download-artifacts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p artifacts/{bittorrent,dockerhub}
          
          echo "üì• Attempting to download artifacts..."
          
          BITTORRENT_SUCCESS=false
          DOCKERHUB_SUCCESS=false
          
          if gh run download ${{ github.event.workflow_run.id }} \
            --name bittorrent-artifacts \
            --dir artifacts/bittorrent; then
            BITTORRENT_SUCCESS=true
          else
            echo "‚ùå Failed to download BitTorrent artifacts"
          fi
            
          if gh run download ${{ github.event.workflow_run.id }} \
            --name dockerhub-artifacts \
            --dir artifacts/dockerhub; then
            DOCKERHUB_SUCCESS=true
          else
            echo "‚ùå Failed to download DockerHub artifacts"
          fi
          
          if [ "$BITTORRENT_SUCCESS" = "true" ] && [ "$DOCKERHUB_SUCCESS" = "true" ]; then
            echo "‚úÖ Successfully downloaded all artifacts"
            exit 0
          else
            echo "‚ùå Failed to download one or more artifacts"
            exit 1
          fi

      # Set final status based on all test results
      - id: set-status
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
          fi

  finalize:
    needs: [wait-for-workflows, e2e-tests]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Set Final Workflow Status
        run: |
          if [ "${{ needs.wait-for-workflows.outputs.workflow_status }}" = "skipped" ]; then
            echo "‚è≠Ô∏è E2E tests were skipped due to failed distribution workflows"
            exit 78  # GitHub's neutral exit code
          elif [ "${{ needs.e2e-tests.outputs.test_status }}" != "success" ]; then
            echo "‚ùå E2E tests failed"
            exit 1
          else
            echo "‚úÖ E2E tests completed successfully"
          fi 