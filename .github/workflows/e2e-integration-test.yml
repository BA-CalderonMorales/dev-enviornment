name: E2E Integration Tests

on:
  workflow_run:
    workflows: ['DockerHub Build and Push', 'BitTorrent Build and Seed']
    types:
      - completed
    branches: [ main, develop ]
    
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  wait-for-workflows:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check-workflows.outputs.should_run }}
      workflow_status: ${{ steps.check-workflows.outputs.workflow_status }}
      triggering_workflow: ${{ steps.check-workflows.outputs.triggering_workflow }}
    steps:
      - id: check-workflows
        name: Check All Distribution Workflows
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const branch = context.payload.workflow_run.head_branch;
            
            console.log('Checking workflow statuses...');
            console.log('Triggered by:', context.payload.workflow_run.name);
            
            core.setOutput('triggering_workflow', context.payload.workflow_run.name);
            
            if (context.payload.workflow_run.conclusion !== 'success') {
              console.log('‚õî Triggering workflow failed');
              core.setOutput('workflow_status', 'failed');
              core.setOutput('should_run', 'false');
              return;
            }
            
            const dockerhubRun = await github.rest.actions.listWorkflowRuns({
              owner,
              repo,
              workflow_id: 'dockerhub-build-and-push.yml',
              branch,
              per_page: 1
            });
            
            const bittorrentRun = await github.rest.actions.listWorkflowRuns({
              owner,
              repo,
              workflow_id: 'bittorrent-build-and-seed.yml',
              branch,
              per_page: 1
            });
            
            const dockerStatus = dockerhubRun.data.workflow_runs[0]?.conclusion;
            const bittorrentStatus = bittorrentRun.data.workflow_runs[0]?.conclusion;
            
            console.log(`DockerHub Status: ${dockerStatus}`);
            console.log(`BitTorrent Status: ${bittorrentStatus}`);
            
            const shouldRun = dockerStatus === 'success' && bittorrentStatus === 'success';
            
            core.setOutput('workflow_status', shouldRun ? 'ready' : 'waiting');
            core.setOutput('should_run', shouldRun);

  e2e-tests:
    needs: wait-for-workflows
    if: needs.wait-for-workflows.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Download Artifacts from Triggering Workflow
        id: download-artifacts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p artifacts/{bittorrent,dockerhub}
          
          WORKFLOW_NAME="${{ needs.wait-for-workflows.outputs.triggering_workflow }}"
          echo "üì• Downloading artifacts from $WORKFLOW_NAME..."
          
          # Get workflow-specific artifact names
          if [[ "$WORKFLOW_NAME" == "DockerHub Build and Push" ]]; then
            ARTIFACT_NAME="dockerhub-artifacts"
            TARGET_DIR="dockerhub"
          else
            ARTIFACT_NAME="bittorrent-artifacts"
            TARGET_DIR="bittorrent"
          fi
          
          if ! gh run download ${{ github.event.workflow_run.id }} \
            --name $ARTIFACT_NAME \
            --dir artifacts/$TARGET_DIR; then
            echo "‚ùå Failed to download $WORKFLOW_NAME artifacts"
            exit 1
          fi
          
          echo "‚úÖ Successfully downloaded artifacts from $WORKFLOW_NAME"

      # Set final status based on all test results
      - id: set-status
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
          fi

  finalize:
    needs: [wait-for-workflows, e2e-tests]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Set Final Workflow Status
        run: |
          if [ "${{ needs.wait-for-workflows.outputs.workflow_status }}" = "skipped" ]; then
            echo "‚è≠Ô∏è E2E tests were skipped due to failed distribution workflows"
            exit 78  # GitHub's neutral exit code
          elif [ "${{ needs.e2e-tests.outputs.test_status }}" != "success" ]; then
            echo "‚ùå E2E tests failed"
            exit 1
          else
            echo "‚úÖ E2E tests completed successfully"
          fi 