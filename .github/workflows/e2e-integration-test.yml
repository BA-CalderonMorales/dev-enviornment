name: E2E Integration Tests

on:
  workflow_run:
    workflows: ['DockerHub Build and Push', 'BitTorrent Build and Seed']
    types:
      - completed
    branches: [ main, develop ]
    
permissions:
  actions: write    # Required for cancelling workflows
  contents: read    # Required for checkout
  packages: read    # Required for artifact access

concurrency:
  group: ${{ github.workflow }}-${{ github.event.workflow_run.head_sha }}
  cancel-in-progress: true

jobs:
  check-prerequisites:
    runs-on: ubuntu-latest
    outputs:
      can_proceed: ${{ steps.check.outputs.can_proceed }}
      reason: ${{ steps.check.outputs.reason }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - id: check
        name: Check Distribution Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_RUN_ID: ${{ github.event.workflow_run.id }}
          GITHUB_SHA: ${{ github.event.workflow_run.head_sha }}
        run: |
          cd .github/scripts
          cargo build --release
          ./target/release/check-workflow-states
          ./target/release/check-artifacts

  cancel-workflow:
    needs: check-prerequisites
    if: needs.check-prerequisites.outputs.can_proceed != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Log Cancellation
        run: |
          echo "⭕ E2E Integration Tests Cancelled"
          echo "Reason: ${{ needs.check-prerequisites.outputs.reason }}"

      - name: Cancel Workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.cancelWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });

  run-tests:
    needs: check-prerequisites
    if: needs.check-prerequisites.outputs.can_proceed == 'true'
    runs-on: ubuntu-latest
    outputs:
      test_status: ${{ steps.test-result.outputs.status }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Download artifact
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id,
            });
            
            const matchArtifact = artifacts.data.artifacts.find((artifact) => {
              return artifact.name == "dockerhub-artifacts"
            });
            
            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip',
            });
            
            const fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/dockerhub-artifacts.zip', Buffer.from(download.data));
      
      - name: Unzip artifact
        run: unzip dockerhub-artifacts.zip

      - name: Run integration tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Running integration tests..."
          docker load < ipfs-cluster.tar
          docker load < ipfs.tar
          docker-compose -f docker-compose.yml up -d
          sleep 30
          docker ps
          curl http://127.0.0.1:9094/id
          curl http://127.0.0.1:9095/id
          docker-compose -f docker-compose.yml down

      - id: test-result
        name: Set Test Result
        if: always()
        run: |
          if [ "${{ steps.download-artifacts.outcome }}" = "success" ]; then
            echo "✅ Artifact check successful"
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "❌ Artifact check failed"
            echo "status=failure" >> $GITHUB_OUTPUT
          fi

  finalize:
    needs: [check-prerequisites, run-tests]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Set Final Status
        run: |
          if [ "${{ needs.check-prerequisites.outputs.can_proceed }}" != "true" ]; then
            echo "⚠ E2E tests cancelled: ${{ needs.check-prerequisites.outputs.reason }}"
            exit 78  # Neutral exit code for cancelled state
          elif [ "${{ needs.run-tests.result }}" != "success" ]; then
            echo "❌ E2E tests failed"
            exit 1
          else
            echo "✅ E2E tests completed successfully"
          fi 