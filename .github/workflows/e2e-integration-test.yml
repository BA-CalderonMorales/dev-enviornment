name: E2E Integration Tests

# Trigger on completion of distribution workflows
on:
  workflow_run:
    workflows: ['DockerHub Build and Push', 'BitTorrent Build and Seed']
    types: [completed]
    branches: [main, develop]

jobs:
  check-workflows:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - id: check
        run: |
          # Get the completed workflow runs for both workflows
          DOCKERHUB_STATUS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/dockerhub-build-and-push.yml/runs?branch=${{ github.ref_name }}&status=completed&per_page=1" | \
            jq -r '.workflow_runs[0].conclusion')
          
          BITTORRENT_STATUS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/bittorrent-build-and-seed.yml/runs?branch=${{ github.ref_name }}&status=completed&per_page=1" | \
            jq -r '.workflow_runs[0].conclusion')
          
          if [ "$DOCKERHUB_STATUS" = "success" ] && [ "$BITTORRENT_STATUS" = "success" ]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi

  e2e-tests:
    needs: check-workflows
    if: needs.check-workflows.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      # Install required tools for BitTorrent testing
      - name: Install BitTorrent tools
        run: |
          sudo apt-get update
          sudo apt-get install -y transmission-cli

      # Test DockerHub distribution method
      - name: Test DockerHub Distribution
        id: dockerhub
        run: |
          chmod +x distributions/dockerhub/e2e/scripts/test.sh
          ./distributions/dockerhub/e2e/scripts/test.sh

      # Test BitTorrent distribution method
      - name: Test BitTorrent Distribution
        id: bittorrent
        run: |
          chmod +x distributions/bittorrent/e2e/scripts/test.sh
          chmod +x startup/start-dev.sh
          
          # Ensure we're using BitTorrent distribution
          export PREFER_BITTORRENT=true
          
          # Test start-dev.sh directly first
          echo "üß™ Testing start-dev.sh directly..."
          if ! ./startup/start-dev.sh --test-mode; then
            echo "‚ùå start-dev.sh verification failed"
            exit 1
          fi
          
          # Run the BitTorrent E2E test suite
          if ! ./distributions/bittorrent/e2e/scripts/test.sh; then
            echo "‚ùå BitTorrent distribution test failed"
            exit 1
          fi

      # Test distribution switching mechanism
      - name: Test Distribution Switching
        id: switching
        run: |
          chmod +x startup/e2e/scripts/test-distribution-switch.sh
          ./startup/e2e/scripts/test-distribution-switch.sh

      # Report results
      - name: Report Test Results
        if: always()
        run: |
          mkdir -p artifacts/tests
          {
            echo "üìä E2E Test Summary ($(date -u))"
            echo "=================="
            echo "DockerHub Distribution: ${{ steps.dockerhub.outcome }}"
            echo "BitTorrent Distribution: ${{ steps.bittorrent.outcome }}"
            echo "Distribution Switching: ${{ steps.switching.outcome }}"
          } | tee artifacts/tests/summary.txt

      # Upload test results
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: artifacts/tests/
          retention-days: 1 